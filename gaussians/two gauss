import matplotlib.pyplot as plt
import numpy as np
import random

from scipy.optimize import minimize

## The function

def L(params):
    x1,x2 = params
    return 1/(3*np.pi)*np.exp(-1/2*(((x1-2)/0.1)**2 + ((x2-8)/15)**2)) + 1/(0.04*np.pi)*np.exp(-1/2*(((x1-7)/1)**2 + ((x2-12)/0.02)**2))

def L2(params):
    y = np.log(L(params))
    y[y < -10] = np.nan
    return y
## Creating data

x1 = np.linspace(-10,20,1000)
x2 = np.linspace(-5,20,1000)
xx1,xx2 = np.meshgrid(x1,x2)
params = (xx1,xx2)
y = L2(params)
print(y.shape)

#print(np.min(np.min(L(params))),np.max(np.max(L(params))))

xs = np.stack((x1,x2),1)

## Plotting data

plt.pcolormesh(xx1,xx2,y)
plt.xlim(0,15)
plt.ylim(6,15)
plt.colorbar()
plt.show()
