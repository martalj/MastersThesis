import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

import tensorflow as tf

from tensorflow import keras
from tensorflow.keras import layers

## Data ##

def f(x):
    return np.exp(x)

x = np.array(np.linspace(0,10,100))
y = np.array(f(x))

## Model ##

model = tf.keras.Sequential([tf.keras.layers.Dense(512,activation='relu',input_shape=[1,]),
                            tf.keras.layers.Dense(512,activation = 'relu'),
                            tf.keras.layers.Dense(512,activation = 'relu'),
                            tf.keras.layers.Dense(1)])

model.compile(optimizer=tf.keras.optimizers.Adam(learning_rate=0.1),loss='mean_absolute_error')

print(model.summary())

#print(model.predict(x))

history = model.fit(x, y, epochs=100)

hist = pd.DataFrame(history.history)
hist['epoch'] = history.epoch
print(hist.tail())

x_test = np.array(np.linspace(-5,15,200))
y_test = np.array(f(x_test))

test_loss = model.evaluate(x_test,  y_test, verbose=2)

predictions = model.predict(x_test)

#plt.plot(history.history['loss'], label='loss')
plt.plot(x_test, y_test, color = 'k', label = 'Data')
plt.plot(x_test, predictions, label = 'Predictions')
#plt.scatter(x1_test, y_test, color = 'm')
plt.title(f'512+512+512 nodes, loss = {test_loss}')
plt.legend()
plt.show()
